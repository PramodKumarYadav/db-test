name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "images/**"
      - ".gitignore"
      - ".vscode/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "images/**"
      - ".gitignore"
      - ".vscode/**"

  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"
          cache-dependency-path: "pom.xml"

      - name: Run tests
        run: mvn clean test --batch-mode

      - name: Create Allure reports
        if: always()
        run: mvn -q allure:report

      - name: Archive test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: test-reports/
          if-no-files-found: warn

      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./target/site/allure-maven-plugin"

      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v4
